{"version":3,"sources":["../../../src/panels/incident-list/module.js"],"names":[],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {bosunIncidentListPanelEditor} from './editor';\n\nvar statusMap = {\n    \"normal\": 0,\n    \"warning\": 1,\n    \"critical\": 2,\n    \"unknown\": 3\n}\n\nexport class BosunIncidentListCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $rootScope, datasourceSrv, templateSrv, utilSrv) {\n        super($scope, $injector);\n        this.datasourceSrv = datasourceSrv;\n        this.templateSrv = templateSrv;\n        this.linkUrl = \"\";\n        this.incidentList = [];\n        //debugger;\n        this.refreshData();\n        this.utilSrv = utilSrv;\n        this.bodyHTML = \"\"\n        //this.utilSrv.init();\n    }\n\n    onInitMetricsPanelEditMode() {\n        this.addEditorTab('Options', bosunIncidentListPanelEditor, 2);\n    }\n\n    refresh() {\n        this.onMetricsPanelRefresh();\n    }\n\n    onMetricsPanelRefresh() {\n        // ignore fetching data if another panel is in fullscreen\n        if (this.otherPanelInFullscreenMode()) { return; }\n        this.refreshData();\n    }\n\n    sortIncidents(property) {\n        this.incidentList = _.sortBy(this.incidentList, property)\n    }\n\n    sortIncidentsByStatus(property) {\n        this.incidentList = _.sortBy(this.incidentList, (incident) => {\n            return statusMap[incident[property]];\n        }).reverse();\n    }\n\n    refreshData() {\n        var query = this.panel.query;\n        var that = this;\n        return this.datasourceSrv.get(this.panel.datasource)\n            .then(datasource => {\n                datasource.IncidentListQuery(query).then((data) => {\n                    data = _.each(data, (item) => {\n                        item.incidentLink = datasource.annotateUrl + \"/incident?id=\" + item.Id;\n                        item.ackLink = datasource.annotateUrl + \"/action?type=ack&key=\" + encodeURIComponent(item.AlertName + item.TagsString);\n                        item.closeLink = datasource.annotateUrl + \"/action?type=close&key=\" + encodeURIComponent(item.AlertName + item.TagsString);\n                        item.forgetLink = datasource.annotateUrl + \"/action?type=forget&key=\" + encodeURIComponent(item.AlertName + item.TagsString);\n                        item.bodyHTML = \"\";\n                        return item;\n                    })\n                    that.incidentList = data;\n                })\n            });\n    }\n    \n    fmtTime(unixTS) {\n        return moment.unix(unixTS).format('YYYY-MM-DD HH:mm:ss');\n    }\n    \n    modalTest() {\n        //var modalScope = this.$scope.$new(true);\n        //modalScope.plugin = this.model;\n        // thi\n        this.utilSrv.showModal(event, {src: \"public/plugins/bosun-app/panels/incident-list/modal.html\", scope:  this.$scope.$new()})\n    }\n\n    statusClass(prefix, status) {\n        switch (status) {\n            case \"critical\": return prefix + \"error\";\n            case \"unknown\": return prefix + \"info\";\n            case \"warning\": return prefix + \"warning\";\n            case \"normal\": return prefix + \"success\";\n            default: return prefix + \"error\";\n        }\n    };\n\n    showActions(incident) {\n        incident.showActions = !incident.showActions;\n    }\n    \n    showEvents(incident) {\n        incident.showEvents = !incident.showEvents;\n    }\n\n    showBody(incident) {\n        this.datasourceSrv.get(this.panel.datasource).\n            then(datasource => {\n                datasource.AlertBodyHTML(incident.AlertName + incident.TagsString).then(data => {\n                    console.log(this)\n                    this.bodyHTML = data;\n                    this.utilSrv.showModal(event, {src: \"public/plugins/bosun-app/panels/incident-list/modal.html\", scope:  this.$scope.$new()})\n                })\n            });\n    }\n}\n\nBosunIncidentListCtrl.templateUrl = 'panels/incident-list/module.html';\n\nexport {\nBosunIncidentListCtrl,\nBosunIncidentListCtrl as PanelCtrl\n};"]}