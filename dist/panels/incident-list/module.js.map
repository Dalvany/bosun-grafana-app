{"version":3,"sources":["../../../src/panels/incident-list/module.js"],"names":["_","moment","MetricsPanelCtrl","bosunIncidentListPanelEditor","statusMap","BosunIncidentListCtrl","$scope","$injector","$rootScope","$window","datasourceSrv","templateSrv","utilSrv","backendSrv","dashboardSrv","self","panelCtrl","ctrl","linkUrl","incidentList","refreshData","bind","bodyHTML","reversedFields","showHelp","storeId","getCurrent","id","panel","get","then","user","datasource","preRelease","addEditorTab","onMetricsPanelRefresh","sessionStorage","getItem","type","field","rev","setItem","join","sortSpec","getSort","split","sortIncidentsByStatus","sortIncidents","otherPanelInFullscreenMode","property","noswap","sortBy","setSort","reverse","incident","query","that","IncidentListQuery","data","each","item","incidentLink","annotateUrl","Id","callSort","unixTS","relativeOnly","m","unix","relative","fromNow","format","prefix","status","modalScope","$new","actions","Actions","appEvent","src","scope","events","Events","selectedMultiAction","incidents","filter","selected","length","i","CurrentStatus","AlertName","TagsString","NeedAck","showActionForm","action","Array","isArray","actionForm","actionRequest","Type","User","login","Message","Notify","Keys","map","submitAction","AlertBodyHTML","$event","idx","shiftKey","lastChecked","undefined","document","getSelection","removeAllRanges","start","Math","min","end","max","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,a;;AACAC,kB;;AACEC,4B,kBAAAA,gB;;AACAC,wC,WAAAA,4B;;;;;;;;;;;;;;;;;;;;;AAELC,qB,GAAY;AACZ,0BAAU,CADE;AAEZ,2BAAW,CAFC;AAGZ,4BAAY,CAHA;AAIZ,2BAAW;AAJC,a;;kEAOHC,qB;;;AACT,+CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoDC,aAApD,EAAmEC,WAAnE,EAAgFC,OAAhF,EAAyFC,UAAzF,EAAqGC,YAArG,EAAmH;AAAA;;AAAA,8JACzGR,MADyG,EACjGC,SADiG;;AAE/G,wBAAIQ,YAAJ;AACA,0BAAKC,SAAL,GAAiBV,OAAOW,IAAxB;AACA,0BAAKP,aAAL,GAAqBA,aAArB;AACA,0BAAKD,OAAL,GAAeA,OAAf;AACA,0BAAKE,WAAL,GAAmBA,WAAnB;AACA,0BAAKH,UAAL,GAAkBA,UAAlB;AACA,0BAAKU,OAAL,GAAe,EAAf;AACA,0BAAKC,YAAL,GAAoB,EAApB;AACA,0BAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,0BAAKD,WAAL;AACA,0BAAKR,OAAL,GAAeA,OAAf;AACA,0BAAKU,QAAL,GAAgB,EAAhB;AACA,0BAAKC,cAAL,GAAsB,EAAtB;AACA,0BAAKC,QAAL,GAAgB,CAAhB;AACA,0BAAKC,OAAL,GAAeX,aAAaY,UAAb,GAA0BC,EAA1B,GAA+B,GAA/B,GAAqC,MAAKC,KAAL,CAAWD,EAA/D;AACAd,+BAAWgB,GAAX,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,gBAAQ;AACrC,8BAAKC,IAAL,GAAYA,IAAZ;AACH,qBAFD;AAGA,0BAAKrB,aAAL,CAAmBmB,GAAnB,CAAuB,MAAKD,KAAL,CAAWI,UAAlC,EAA8CF,IAA9C,CAAmD,sBAAc;AAC7D,8BAAKG,UAAL,GAAkBD,WAAWC,UAA7B;AACH,qBAFD;AApB+G;AAuBlH;;;;iEAE4B;AACzB,6BAAKC,YAAL,CAAkB,SAAlB,EAA6B/B,4BAA7B,EAA2D,CAA3D;AACH;;;8CAES;AACN,6BAAKgC,qBAAL;AACH;;;8CAES;AACN,+BAAO,KAAK1B,OAAL,CAAa2B,cAAb,CAA4BC,OAA5B,CAAoC,KAAKZ,OAAL,GAAe,MAAnD,CAAP;AACH;;;4CAEOa,I,EAAMC,K,EAAOC,G,EAAK;AACtB,6BAAK/B,OAAL,CAAa2B,cAAb,CAA4BK,OAA5B,CAAoC,KAAKhB,OAAL,GAAe,MAAnD,EAA2D,CAACa,IAAD,EAAOC,KAAP,EAAcC,GAAd,EAAmBE,IAAnB,CAAwB,GAAxB,CAA3D;AACH;;;+CAEU;AACP,4BAAIC,WAAW,KAAKC,OAAL,EAAf;AACA,4BAAI,CAACD,QAAD,IAAaA,YAAY,EAA7B,EAAiC;AAC7B;AACH;AACD;AACA,4BAAIE,QAAQF,SAASE,KAAT,CAAe,GAAf,CAAZ;AACA,6BAAKtB,cAAL,CAAoBsB,MAAM,CAAN,CAApB,IAAgCA,MAAM,CAAN,KAAY,MAA5C;AACA,4BAAIA,MAAM,CAAN,KAAY,QAAhB,EAA0B;AACtB,iCAAKC,qBAAL,CAA2BD,MAAM,CAAN,CAA3B,EAAqC,IAArC;AACH;AACD,4BAAIA,MAAM,CAAN,KAAY,OAAhB,EAAyB;AACrB,iCAAKE,aAAL,CAAmBF,MAAM,CAAN,CAAnB,EAA6B,IAA7B;AACH;AACJ;;;4DAEuB;AACpB;AACA,4BAAI,KAAKG,0BAAL,EAAJ,EAAuC;AAAE;AAAS;AAClD,6BAAK5B,WAAL;AACH;;;kDAEa6B,Q,EAAUC,M,EAAQ;AAC5B,6BAAK/B,YAAL,GAAoBnB,EAAEmD,MAAF,CAAS,KAAKhC,YAAd,EAA4B,IAA5B,CAApB;AACA,6BAAKA,YAAL,GAAoBnB,EAAEmD,MAAF,CAAS,KAAKhC,YAAd,EAA4B8B,QAA5B,CAApB;AACA,4BAAI,CAACC,MAAL,EAAa;AACT,iCAAK3B,cAAL,CAAoB0B,QAApB,IAAgC,KAAK1B,cAAL,CAAoB0B,QAApB,KAAiC,KAAjE;AACH;AACD,6BAAKG,OAAL,CAAaH,QAAb,EAAuB,OAAvB,EAAgC,KAAK1B,cAAL,CAAoB0B,QAApB,CAAhC;AACA,4BAAI,KAAK1B,cAAL,CAAoB0B,QAApB,KAAiC,IAArC,EAA2C;AACvC,iCAAK9B,YAAL,CAAkBkC,OAAlB;AACH;AACJ;;;0DAEqBJ,Q,EAAUC,M,EAAQ;AACpC,6BAAK/B,YAAL,GAAoBnB,EAAEmD,MAAF,CAAS,KAAKhC,YAAd,EAA4B,IAA5B,CAApB;AACA,6BAAKA,YAAL,GAAoBnB,EAAEmD,MAAF,CAAS,KAAKhC,YAAd,EAA4B,UAACmC,QAAD,EAAc;AAC1D,mCAAOlD,UAAUkD,SAASL,QAAT,CAAV,CAAP;AACH,yBAFmB,CAApB;AAGA,4BAAI,CAACC,MAAL,EAAa;AACT,iCAAK3B,cAAL,CAAoB0B,QAApB,IAAgC,KAAK1B,cAAL,CAAoB0B,QAApB,KAAiC,KAAjE;AACH;AACD,6BAAKG,OAAL,CAAaH,QAAb,EAAuB,QAAvB,EAAiC,KAAK1B,cAAL,CAAoB0B,QAApB,CAAjC;AACA,4BAAI,KAAK1B,cAAL,CAAoB0B,QAApB,KAAiC,IAArC,EAA2C;AACvC,iCAAK9B,YAAL,CAAkBkC,OAAlB;AACH;AACJ;;;kDAEa;AACV,4BAAIE,QAAQ,KAAK3B,KAAL,CAAW2B,KAAvB;AACA,4BAAIC,OAAO,IAAX;AACA,+BAAO,KAAK9C,aAAL,CAAmBmB,GAAnB,CAAuB,KAAKD,KAAL,CAAWI,UAAlC,EACFF,IADE,CACG,sBAAc;AAChBE,uCAAWyB,iBAAX,CAA6BF,KAA7B,EAAoCzB,IAApC,CAAyC,UAAC4B,IAAD,EAAU;AAC/CA,uCAAO1D,EAAE2D,IAAF,CAAOD,IAAP,EAAa,UAACE,IAAD,EAAU;AAC1BA,yCAAKC,YAAL,GAAoB7B,WAAW8B,WAAX,GAAyB,eAAzB,GAA2CF,KAAKG,EAApE;AACAH,yCAAKtC,QAAL,GAAgB,EAAhB;AACA,2CAAOsC,IAAP;AACH,iCAJM,CAAP;AAKAJ,qCAAKrC,YAAL,GAAoBuC,IAApB;AACAF,qCAAKQ,QAAL;AACH,6BARD;AASH,yBAXE,CAAP;AAYH;;;4CAEOC,M,EAAQC,Y,EAAc;AAC1B,4BAAIC,IAAIlE,OAAOmE,IAAP,CAAYH,MAAZ,CAAR;AACA,4BAAII,WAAW,MAAMF,EAAEG,OAAF,EAAN,GAAoB,GAAnC;AACA,4BAAIJ,YAAJ,EAAkB;AACd,mCAAOG,QAAP;AACH;AACD,+BAAOF,EAAEI,MAAF,CAAS,sBAAT,IAAmCF,QAA1C;AACH;;;gDAEWG,M,EAAQC,M,EAAQ;AACxB,gCAAQA,MAAR;AACI,iCAAK,UAAL;AAAiB,uCAAOD,SAAS,OAAhB;AACjB,iCAAK,SAAL;AAAgB,uCAAOA,SAAS,MAAhB;AAChB,iCAAK,SAAL;AAAgB,uCAAOA,SAAS,SAAhB;AAChB,iCAAK,QAAL;AAAe,uCAAOA,SAAS,SAAhB;AACf;AAAS,uCAAOA,SAAS,OAAhB;AALb;AAOH;;;gDAEWlB,Q,EAAU;AAClB,4BAAIoB,aAAa,KAAKpE,MAAL,CAAYqE,IAAZ,EAAjB;AACAD,mCAAWE,OAAX,GAAqBtB,SAASuB,OAA9B;AACA,6BAAKrE,UAAL,CAAgBsE,QAAhB,CAAyB,YAAzB,EAAuC;AACnCC,iCAAK,kEAD8B;AAEnCC,mCAAON;AAF4B,yBAAvC;AAIH;;;+CAEUpB,Q,EAAU;AACjB,4BAAIoB,aAAa,KAAKpE,MAAL,CAAYqE,IAAZ,EAAjB;AACAD,mCAAWO,MAAX,GAAoB3B,SAAS4B,MAAT,CAAgB7B,OAAhB,EAApB;AACA,6BAAK7C,UAAL,CAAgBsE,QAAhB,CAAyB,YAAzB,EAAuC;AACnCC,iCAAK,iEAD8B;AAEnCC,mCAAON;AAF4B,yBAAvC;AAIH;;;kDAEa;AACV,4BAAI,CAAC,KAAKS,mBAAV,EAA+B;AAC3B;AACH;AACD,4BAAIC,YAAYpF,EAAEqF,MAAF,CAAS,KAAKlE,YAAd,EAA4B,UAACmC,QAAD,EAAc;AACtD,mCAAOA,SAASgC,QAAT,IAAqB,IAA5B;AACH,yBAFe,CAAhB;AAGA,4BAAIF,UAAUG,MAAV,IAAoB,CAAxB,EAA2B;AACvB;AACH;AATS;AAAA;AAAA;;AAAA;AAUV,iDAAcH,SAAd,8HAAyB;AAAA,oCAAhBI,CAAgB;;AACrB,oCAAI,KAAKL,mBAAL,IAA4B,QAAhC,EAA0C;AACtC,wCAAIK,EAAEC,aAAF,IAAmB,SAAvB,EAAkC;AAC9B,6CAAKjF,UAAL,CAAgBsE,QAAhB,CAAyB,aAAzB,EAAwC,CAAC,cAAD,EAAiB,4DAA4DU,EAAEE,SAA9D,GAA0EF,EAAEG,UAA7F,CAAxC;AACA;AACH;AACJ;AACD,oCAAI,KAAKR,mBAAL,IAA4B,OAAhC,EAAyC;AACrC,wCAAIK,EAAEC,aAAF,IAAmB,QAAvB,EAAiC;AAC7B,6CAAKjF,UAAL,CAAgBsE,QAAhB,CAAyB,aAAzB,EAAwC,CAAC,cAAD,EAAiB,0DAA0DU,EAAEE,SAA5D,GAAwEF,EAAEG,UAA3F,CAAxC;AACA;AACH;AACJ;AACD,oCAAI,KAAKR,mBAAL,IAA4B,KAAhC,EAAuC;AACnC,wCAAI,CAACK,EAAEI,OAAP,EAAgB;AACZ,6CAAKpF,UAAL,CAAgBsE,QAAhB,CAAyB,aAAzB,EAAwC,CAAC,cAAD,EAAiB,wDAAwDU,EAAEE,SAA1D,GAAsEF,EAAEG,UAAzF,CAAxC;AACA;AACH;AACJ;AACJ;AA7BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BV,6BAAKE,cAAL,CAAoBT,SAApB,EAA+B,KAAKD,mBAApC;AACH;;;mDAGcC,S,EAAWU,M,EAAQ;AAC9B,4BAAI,CAACC,MAAMC,OAAN,CAAcZ,SAAd,CAAL,EAA+B;AAC3BA,wCAAY,CAACA,SAAD,CAAZ;AACH;AACD,4BAAIV,aAAa,KAAKpE,MAAL,CAAYqE,IAAZ,EAAjB;AACAD,mCAAWU,SAAX,GAAuBA,SAAvB;AACAV,mCAAWoB,MAAX,GAAoBA,MAApB;AACA,6BAAKtF,UAAL,CAAgBsE,QAAhB,CAAyB,YAAzB,EAAuC;AACnCC,iCAAK,iEAD8B;AAEnCC,mCAAON;AAF4B,yBAAvC;AAIH;;;qDAEgBU,S,EAAWU,M,EAAQ;AAChC,4BAAI/E,OAAO,IAAX;AACA,4BAAI,CAAC,KAAKkF,UAAV,EAAsB;AAClBlF,iCAAKP,UAAL,CAAgBsE,QAAhB,CAAyB,aAAzB,EAAwC,CAAC,cAAD,EAAiB,2BAAjB,CAAxC;AACA;AACH;AACD,4BAAImB,aAAa,KAAKA,UAAtB;AACA,4BAAIC,gBAAgB;AAChBC,kCAAML,MADU;AAEhBM,kCAAMH,WAAWG,IAAX,IAAmBrF,KAAKgB,IAAL,CAAUsE,KAFnB;AAGhBC,qCAASL,WAAWK,OAHJ;AAIhBC,oCAAQN,WAAWM,MAAX,IAAqB;AAJb,yBAApB;AAMA,4BAAIL,cAAcI,OAAd,IAAyB,EAAzB,IAA+BJ,cAAcK,MAAd,IAAwB,IAA3D,EAAiE;AAC7DxF,iCAAKP,UAAL,CAAgBsE,QAAhB,CAAyB,aAAzB,EAAwC,CAAC,cAAD,EAAiB,4CAAjB,CAAxC;AACA;AACH;AACDoB,sCAAcM,IAAd,GAAqBxG,EAAEyG,GAAF,CAAMrB,SAAN,EAAiB,UAAC9B,QAAD,EAAc;AAChD,mCAAOA,SAASoC,SAAT,GAAqBpC,SAASqC,UAArC;AACH,yBAFoB,CAArB;AAGA,6BAAKjF,aAAL,CAAmBmB,GAAnB,CAAuB,KAAKD,KAAL,CAAWI,UAAlC,EACIF,IADJ,CACS,sBAAc;AACfE,uCAAW0E,YAAX,CAAwBR,aAAxB,EAAuCpE,IAAvC,CAA4C;AAAA,uCACxCf,KAAKK,WAAL,GAAmBU,IAAnB,CAAwB,YAAM;AAAEf,yCAAKkF,UAAL,CAAgBK,OAAhB,GAA0B,EAA1B;AAA+B,iCAA/D,CADwC;AAAA,6BAA5C,CACqE;AADrE;AAGH,yBALL;AAMH;;;6CAEQhD,Q,EAAU;AAAA;;AACf,6BAAK5C,aAAL,CAAmBmB,GAAnB,CAAuB,KAAKD,KAAL,CAAWI,UAAlC,EACIF,IADJ,CACS,sBAAc;AACfE,uCAAW2E,aAAX,CAAyBrD,SAASoC,SAAT,GAAqBpC,SAASqC,UAAvD,EAAmE7D,IAAnE,CAAwE,gBAAQ;AAC5E,oCAAI4C,aAAa,OAAKlE,UAAL,CAAgBmE,IAAhB,EAAjB;AACAD,2CAAWpD,QAAX,GAAsBoC,IAAtB;AACA,uCAAKlD,UAAL,CAAgBsE,QAAhB,CAAyB,YAAzB,EAAuC;AACnCC,yCAAK,+DAD8B;AAEnCC,2CAAON;AAF4B,iCAAvC;AAIH,6BAPD;AAQH,yBAVL;AAWH;;;gDAGWkC,M,EAAQC,G,EAAK;AACrB,4BAAID,OAAOE,QAAP,IAAmB,KAAKxG,MAAL,CAAYyG,WAAZ,IAA2BC,SAAlD,EAA6D;AACzD;AACA;AACAC,qCAASC,YAAT,GAAwBC,eAAxB;AACA,gCAAIC,QAAQC,KAAKC,GAAL,CAAST,GAAT,EAAc,KAAKvG,MAAL,CAAYyG,WAA1B,CAAZ;AACA,gCAAIQ,MAAMF,KAAKG,GAAL,CAASX,GAAT,EAAc,KAAKvG,MAAL,CAAYyG,WAA1B,CAAV;AACA,iCAAK,IAAIvB,IAAI4B,KAAb,EAAoB5B,KAAK+B,GAAzB,EAA8B/B,GAA9B,EAAmC;AAC/B,qCAAKrE,YAAL,CAAkBqE,CAAlB,EAAqBF,QAArB,GAAgC,IAAhC;AACH;AACJ;AACD,6BAAKhF,MAAL,CAAYyG,WAAZ,GAA0BF,GAA1B;AACH;;;;cAtPsC3G,gB;;;;AA0P3CG,kCAAsBoH,WAAtB,GAAoC,kCAApC;;iCAGIpH,qB","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { bosunIncidentListPanelEditor } from './editor';\n\nvar statusMap = {\n    \"normal\": 0,\n    \"warning\": 1,\n    \"critical\": 2,\n    \"unknown\": 3\n}\n\nexport class BosunIncidentListCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $rootScope, $window, datasourceSrv, templateSrv, utilSrv, backendSrv, dashboardSrv) {\n        super($scope, $injector);\n        var self = this;\n        this.panelCtrl = $scope.ctrl;\n        this.datasourceSrv = datasourceSrv;\n        this.$window = $window;\n        this.templateSrv = templateSrv;\n        this.$rootScope = $rootScope;\n        this.linkUrl = \"\";\n        this.incidentList = [];\n        this.refreshData = this.refreshData.bind(this);\n        this.refreshData();\n        this.utilSrv = utilSrv;\n        this.bodyHTML = \"\";\n        this.reversedFields = {};\n        this.showHelp = 0;\n        this.storeId = dashboardSrv.getCurrent().id + \"-\" + this.panel.id;\n        backendSrv.get('/api/user').then(user => {\n            this.user = user;\n        });\n        this.datasourceSrv.get(this.panel.datasource).then(datasource => {\n            this.preRelease = datasource.preRelease;\n        });\n    }\n\n    onInitMetricsPanelEditMode() {\n        this.addEditorTab('Options', bosunIncidentListPanelEditor, 2);\n    }\n\n    refresh() {\n        this.onMetricsPanelRefresh();\n    }\n\n    getSort() {\n        return this.$window.sessionStorage.getItem(this.storeId + \"sort\");\n    }\n\n    setSort(type, field, rev) {\n        this.$window.sessionStorage.setItem(this.storeId + \"sort\", [type, field, rev].join(\":\"));\n    }\n\n    callSort() {\n        var sortSpec = this.getSort();\n        if (!sortSpec || sortSpec == \"\") {\n            return;\n        }\n        // Property, Type, Reverse?\n        var split = sortSpec.split(\":\");\n        this.reversedFields[split[0]] = split[2] == \"true\";\n        if (split[1] == \"status\") {\n            this.sortIncidentsByStatus(split[0], true);\n        }\n        if (split[1] == \"alpha\") {\n            this.sortIncidents(split[0], true);\n        }\n    }\n\n    onMetricsPanelRefresh() {\n        // ignore fetching data if another panel is in fullscreen\n        if (this.otherPanelInFullscreenMode()) { return; }\n        this.refreshData();\n    }\n\n    sortIncidents(property, noswap) {\n        this.incidentList = _.sortBy(this.incidentList, 'Id');\n        this.incidentList = _.sortBy(this.incidentList, property)\n        if (!noswap) {\n            this.reversedFields[property] = this.reversedFields[property] == false;\n        }\n        this.setSort(property, \"alpha\", this.reversedFields[property])\n        if (this.reversedFields[property] == true) {\n            this.incidentList.reverse();\n        }\n    }\n\n    sortIncidentsByStatus(property, noswap) {\n        this.incidentList = _.sortBy(this.incidentList, 'Id');\n        this.incidentList = _.sortBy(this.incidentList, (incident) => {\n            return statusMap[incident[property]];\n        });\n        if (!noswap) {\n            this.reversedFields[property] = this.reversedFields[property] == false;\n        }\n        this.setSort(property, \"status\", this.reversedFields[property])\n        if (this.reversedFields[property] == true) {\n            this.incidentList.reverse();\n        }\n    }\n\n    refreshData() {\n        var query = this.panel.query;\n        var that = this;\n        return this.datasourceSrv.get(this.panel.datasource)\n            .then(datasource => {\n                datasource.IncidentListQuery(query).then((data) => {\n                    data = _.each(data, (item) => {\n                        item.incidentLink = datasource.annotateUrl + \"/incident?id=\" + item.Id;\n                        item.bodyHTML = \"\";\n                        return item;\n                    })\n                    that.incidentList = data;\n                    that.callSort();\n                })\n            });\n    }\n\n    fmtTime(unixTS, relativeOnly) {\n        var m = moment.unix(unixTS);\n        var relative = '(' + m.fromNow() + ')'\n        if (relativeOnly) {\n            return relative;\n        }\n        return m.format('YYYY-MM-DD HH:mm:ss ') + relative;\n    }\n\n    statusClass(prefix, status) {\n        switch (status) {\n            case \"critical\": return prefix + \"error\";\n            case \"unknown\": return prefix + \"info\";\n            case \"warning\": return prefix + \"warning\";\n            case \"normal\": return prefix + \"success\";\n            default: return prefix + \"error\";\n        }\n    };\n\n    showActions(incident) {\n        var modalScope = this.$scope.$new();\n        modalScope.actions = incident.Actions;\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_actions.html\",\n            scope: modalScope\n        });\n    }\n\n    showEvents(incident) {\n        var modalScope = this.$scope.$new();\n        modalScope.events = incident.Events.reverse();\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_events.html\",\n            scope: modalScope\n        });\n    }\n\n    multiAction() {\n        if (!this.selectedMultiAction) {\n            return\n        }\n        var incidents = _.filter(this.incidentList, (incident) => {\n            return incident.selected == true;\n        })\n        if (incidents.length == 0) {\n            return\n        }\n        for (var i of incidents) {\n            if (this.selectedMultiAction == \"forget\") {\n                if (i.CurrentStatus != \"unknown\") {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not forget an alert that is not currently unknown: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n            if (this.selectedMultiAction == \"close\") {\n                if (i.CurrentStatus != \"normal\") {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not close an alert that is not currently normal: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n            if (this.selectedMultiAction == \"ack\") {\n                if (!i.NeedAck) {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not ack an alert that is already acknowledged: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n        }\n        this.showActionForm(incidents, this.selectedMultiAction)\n    }\n\n    // incidents can be an incident, but also an [] of incidents    \n    showActionForm(incidents, action) {\n        if (!Array.isArray(incidents)) {\n            incidents = [incidents]\n        }\n        var modalScope = this.$scope.$new();\n        modalScope.incidents = incidents;\n        modalScope.action = action;\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_action.html\",\n            scope: modalScope\n        });\n    }\n\n    submitActionForm(incidents, action) {\n        var self = this;\n        if (!this.actionForm) {\n            self.$rootScope.appEvent('alert-error', ['Action Error', 'must fill out form fields']);\n            return;\n        }\n        var actionForm = this.actionForm;\n        var actionRequest = {\n            Type: action,\n            User: actionForm.User || self.user.login,\n            Message: actionForm.Message,\n            Notify: actionForm.Notify == true,\n        }\n        if (actionRequest.Message == \"\" && actionRequest.Notify == true) {\n            self.$rootScope.appEvent('alert-error', ['Action Error', 'must fill out message field when notifying']);\n            return;\n        }\n        actionRequest.Keys = _.map(incidents, (incident) => {\n            return incident.AlertName + incident.TagsString;\n        });\n        this.datasourceSrv.get(this.panel.datasource).\n            then(datasource => {\n                datasource.submitAction(actionRequest).then(() =>\n                    self.refreshData().then(() => { self.actionForm.Message = \"\"; }) // clear message\n                )\n            })\n    }\n\n    showBody(incident) {\n        this.datasourceSrv.get(this.panel.datasource).\n            then(datasource => {\n                datasource.AlertBodyHTML(incident.AlertName + incident.TagsString).then(data => {\n                    var modalScope = this.$rootScope.$new();\n                    modalScope.bodyHTML = data;\n                    this.$rootScope.appEvent('show-modal', {\n                        src: \"public/plugins/bosun-app/panels/incident-list/modal_body.html\",\n                        scope: modalScope\n                    });\n                })\n            });\n    }\n\n    // Enable selecting a range of checkboxes with shift-click\n    selectRange($event, idx) {\n        if ($event.shiftKey && this.$scope.lastChecked != undefined) {\n            // This makes the selection \"flash\" and then get removed\n            // not sure of a good way to prevent it\n            document.getSelection().removeAllRanges();\n            var start = Math.min(idx, this.$scope.lastChecked);\n            var end = Math.max(idx, this.$scope.lastChecked);\n            for (var i = start; i <= end; i++) {\n                this.incidentList[i].selected = true;\n            }\n        }\n        this.$scope.lastChecked = idx;\n    }\n\n}\n\nBosunIncidentListCtrl.templateUrl = 'panels/incident-list/module.html';\n\nexport {\n    BosunIncidentListCtrl as PanelCtrl\n};\n"]}