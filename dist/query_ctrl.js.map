{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEa;;;AAEX,WAFW,wBAEX,CAAY,MAAZ,EAAoB,SAApB,EAA+B,YAA/B,EAA8C;0BAFnC,0BAEmC;;uEAFnC,qCAGH,QAAQ,YAD8B;;AAG5C,UAAK,KAAL,GAAa,MAAb,CAH4C;AAI5C,UAAK,YAAL,GAAoB,YAApB,CAJ4C;AAK5C,UAAK,MAAL,CAAY,MAAZ,GAAqB,MAAK,MAAL,CAAY,MAAZ,IAAsB,aAAtB,CALuB;;GAA9C;;eAFW;;iCAUE;AACX,aAAO,KAAK,UAAL,CAAgB,eAAhB,CAAgC,KAAK,MAAL,CAAhC,CACJ,IADI,CACC,KAAK,YAAL,CAAkB,mBAAlB,CAAsC,KAAtC,CADD,CAAP;;AADW;;;uCAMM;AACjB,WAAK,SAAL,CAAe,OAAf;AADiB;;;SAhBR;;;AAqBb,yBAAyB,WAAzB,GAAuC,4BAAvC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class BosunDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.target = this.target.target || 'Bosun Query';\n  }\n\n  getOptions() {\n    return this.datasource.metricFindQuery(this.target)\n      .then(this.uiSegmentSrv.transformToSegments(false));\n      // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nBosunDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}