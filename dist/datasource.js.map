{"version":3,"sources":["../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["export class BosunDatasource {\n\tconstructor(instanceSettings, $q, backendSrv, templateSrv) {\n\t\tthis.type = instanceSettings.type;\n\t\tthis.url = instanceSettings.url;\n\t\tthis.name = instanceSettings.name;\n\t\tthis.q = $q;\n\t\tthis.backendSrv = backendSrv;\n\t\tthis.templateSrv = templateSrv;\n\t}\n\n    makeTable(result) {\n      var table = new TableModel();\n      if (Object.keys(result).length < 1) {\n        return table;\n      }\n      var tagKeys = [];\n      _.each(result[0].Group, function(v, tagKey) {\n        tagKeys.push(tagKey);\n      });\n      tagKeys.sort();\n      table.columns = _.map(tagKeys, function(tagKey) {\n        return {\"text\": tagKey};\n      });\n      table.columns.push({\"text\": \"value\"});\n      _.each(result, function(res) {\n         var row = [];\n         _.each(res.Group, function(tagValue, tagKey) {\n           row[tagKeys.indexOf(tagKey)] = tagValue;\n         });\n         row.push(res.Value);\n         table.rows.push(row);\n      });\n      return [table];\n    }\n\n    transformMetricData(result, target, options) {\n      var tagData = [];\n      _.each(result.Group, function(v, k) {\n        tagData.push({'value': v, 'key': k});\n      });\n      var sortedTags = _.sortBy(tagData, 'key');\n      var metricLabel = \"\";\n      if (target.alias) {\n        var scopedVars = _.clone(options.scopedVars || {});\n        _.each(sortedTags, function(value) {\n          scopedVars['tag_' + value.key] = {\"value\": value.value};\n        });\n        metricLabel = templateSrv.replace(target.alias, scopedVars);\n      } else {\n        tagData = [];\n        _.each(sortedTags, function(tag) {\n          tagData.push(tag.key + '=' + tag.value);\n        });\n        metricLabel = '{' + tagData.join(', ') + '}';\n      }\n      var dps = [];\n      _.each(result.Value, function (v, k) {\n        dps.push([v, parseInt(k) * 1000]);\n      });\n      return { target: metricLabel, datapoints: dps };\n    }\n\n\tperformTimeSeriesQuery(query, target, options) {\n\t\tvar exprDate = options.range.to.utc().format('YYYY-MM-DD');\n\t\tvar exprTime = options.range.to.utc().format('HH:mm:ss');\n\t\tvar url = this.url + '/api/expr?date=' + encodeURIComponent(exprDate) + '&time=' + encodeURIComponent(exprTime);\n\t\treturn this.backendSrv.datasourceRequest({\n\t\t  url: url,\n\t\t  method: 'POST',\n\t\t  data: query,\n\t\t  datasource: this\n\t\t  }).then(response => {\n\t\t\t  if (response.status === 200) {\n\t\t\t\t  var result;\n\t\t\t\t  if (response.data.Type === 'series') {\n\t\t\t\t  result = _.map(response.data.Results, function(result) {\n\t\t\t\t\t\t  return response.config.datasource.transformMetricData(result, target, options);\n\t\t\t\t\t\t  });\n\t\t\t\t  }\n\t\t\t\t  if (response.data.Type === 'number') {\n\t\t\t\t  result = response.config.datasource.makeTable(response.data.Results);\n\t\t\t\t  }\n\t\t\t\t  return { data: result };\n\t\t\t  }\n\t\t});\n\t}\n\n\tquery(options) {\n\t\n      var queries = [];\n      // Get time values to replace $start\n      // The end time is what bosun regards as 'now'\n      var secondsAgo = options.range.to.diff(options.range.from.utc(), 'seconds');\n      secondsAgo += 's';\n      _.each(options.targets, _.bind(function(target) {\n        if (!target.expr || target.hide) {\n          return;\n        }\n        var query = {};\n\n        query = this.templateSrv.replace(target.expr, options.scopedVars);\n        query = query.replace(/\\$start/g, secondsAgo);\n        query = query.replace(/\\$ds/g, options.interval);\n        queries.push(query);\n      }, this));\n\n      // No valid targets, return the empty result to save a round trip.\n      if (_.isEmpty(queries)) {\n        var d = this.q.defer();\n        d.resolve({ data: [] });\n        return d.promise;\n      }\n\n      var allQueryPromise = _.map(queries, _.bind(function(query, index) {\n        return this.performTimeSeriesQuery(query, options.targets[index], options);\n      }, this));\n\n      return this.q.all(allQueryPromise)\n        .then(function(allResponse) {\n          var result = [];\n          _.each(allResponse, function(response) {\n            _.each(response.data, function(d) {\n              result.push(d);\n            });\n          });\n          return { data: result };\n        });\n    }\n\n  // Required\n  // Used for testing datasource in datasource configuration pange\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n\n}\n\n"]}