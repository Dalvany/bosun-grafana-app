{"version":3,"sources":["../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import TableModel from 'app/core/table_model';\n\nexport class BosunDatasource {\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n    }\n\n    makeTable(result) {\n        var table = new TableModel();\n        if (Object.keys(result).length < 1) {\n            return table;\n        }\n        var tagKeys = [];\n        _.each(result[0].Group, function(v, tagKey) {\n            tagKeys.push(tagKey);\n        });\n        tagKeys.sort();\n        table.columns = _.map(tagKeys, function(tagKey) {\n            return { \"text\": tagKey };\n        });\n        table.columns.push({ \"text\": \"value\" });\n        _.each(result, function(res) {\n            var row = [];\n            _.each(res.Group, function(tagValue, tagKey) {\n                row[tagKeys.indexOf(tagKey)] = tagValue;\n            });\n            row.push(res.Value);\n            table.rows.push(row);\n        });\n        return [table];\n    }\n\n    transformMetricData(result, target, options) {\n        var tagData = [];\n        _.each(result.Group, function(v, k) {\n            tagData.push({ 'value': v, 'key': k });\n        });\n        var sortedTags = _.sortBy(tagData, 'key');\n        var metricLabel = \"\";\n        if (target.alias) {\n            var scopedVars = _.clone(options.scopedVars || {});\n            _.each(sortedTags, function(value) {\n                scopedVars['tag_' + value.key] = { \"value\": value.value };\n            });\n            metricLabel = this.templateSrv.replace(target.alias, scopedVars);\n        } else {\n            tagData = [];\n            _.each(sortedTags, function(tag) {\n                tagData.push(tag.key + '=' + tag.value);\n            });\n            metricLabel = '{' + tagData.join(', ') + '}';\n        }\n        var dps = [];\n        _.each(result.Value, function(v, k) {\n            dps.push([v, parseInt(k) * 1000]);\n        });\n        return { target: metricLabel, datapoints: dps };\n    }\n\n    performTimeSeriesQuery(query, target, options) {\n        var exprDate = options.range.to.utc().format('YYYY-MM-DD');\n        var exprTime = options.range.to.utc().format('HH:mm:ss');\n        var url = this.url + '/api/expr?date=' + encodeURIComponent(exprDate) + '&time=' + encodeURIComponent(exprTime);\n        return this.backendSrv.datasourceRequest({\n            url: url,\n            method: 'POST',\n            data: query,\n            datasource: this\n        }).then(response => {\n            if (response.status === 200) {\n                var result;\n                if (response.data.Type === 'series') {\n                    result = _.map(response.data.Results, function(result) {\n                        return response.config.datasource.transformMetricData(result, target, options);\n                    });\n                }\n                if (response.data.Type === 'number') {\n                    result = response.config.datasource.makeTable(response.data.Results);\n                }\n                return { data: result };\n            }\n        });\n    }\n\n    query(options) {\n\n        var queries = [];\n        // Get time values to replace $start\n        // The end time is what bosun regards as 'now'\n        var secondsAgo = options.range.to.diff(options.range.from.utc(), 'seconds');\n        secondsAgo += 's';\n        _.each(options.targets, _.bind(function(target) {\n            if (!target.expr || target.hide) {\n                return;\n            }\n            var query = {};\n\n            query = this.templateSrv.replace(target.expr, options.scopedVars);\n            query = query.replace(/\\$start/g, secondsAgo);\n            query = query.replace(/\\$ds/g, options.interval);\n            queries.push(query);\n        }, this));\n\n        // No valid targets, return the empty result to save a round trip.\n        if (_.isEmpty(queries)) {\n            var d = this.q.defer();\n            d.resolve({ data: [] });\n            return d.promise;\n        }\n\n        var allQueryPromise = _.map(queries, _.bind(function(query, index) {\n            return this.performTimeSeriesQuery(query, options.targets[index], options);\n        }, this));\n\n        return this.q.all(allQueryPromise)\n            .then(function(allResponse) {\n                var result = [];\n                _.each(allResponse, function(response) {\n                    _.each(response.data, function(d) {\n                        result.push(d);\n                    });\n                });\n                return { data: result };\n            });\n    }\n\n    // Required\n    // Used for testing datasource in datasource configuration pange\n    testDatasource() {\n        return this.backendSrv.datasourceRequest({\n            url: this.url + '/',\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n            }\n        });\n    }\n}\n\n"]}