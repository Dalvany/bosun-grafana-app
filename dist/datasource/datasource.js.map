{"version":3,"sources":["../../src/datasource/datasource.js"],"names":["TableModel","moment","BosunDatasource","instanceSettings","$q","backendSrv","templateSrv","$sce","$rootScope","annotateUrl","jsonData","type","url","name","showHelper","enableQueryHelper","preRelease","enablePreReleaseFeatures","authToken","q","sce","IncidentListQuery","bind","result","table","Object","keys","length","tagKeys","_","each","Group","v","tagKey","push","sort","columns","map","res","row","tagValue","indexOf","Value","rows","target","options","tagData","k","sortedTags","sortBy","metricLabel","alias","scopedVars","clone","value","key","replace","tag","join","dps","parseInt","datapoints","query","exprDate","range","to","utc","format","exprTime","encodeURIComponent","bosunRequest","method","data","datasource","then","response","status","Type","Results","config","transformMetricData","makeTable","Columns","column","Rows","metricRoot","filtered","filter","startsWith","metric","findTransform","text","metricsRegex","tagKeysRegex","tagValuesRegex","metricsQuery","match","_metricsStartWith","tagKeysQuery","_tagKeysForMetric","tagValuesQuery","_tagValuesForMetricAndTagKey","trim","when","queries","secondsAgo","diff","from","targets","expr","hide","interval","isEmpty","d","defer","resolve","promise","allQueryPromise","index","performTimeSeriesQuery","all","allResponse","annotation","fieldName","fieldObject","params","param","empty","not","variables","pad","num","size","s","StartDate","unix","EndDate","_processAnnotationQueryParam","Source","Host","CreationUser","Owner","Category","Url","jQuery","rawUrl","events","a","duration","hours","minutes","seconds","substring","Message","Id","grafanaAnnotation","time","title","headers","includes","message","angular","fromJson","self","interpolatedQuery","transformResponse","_plainTextResponseTransform","error","appEvent","alertKey","trustAsHtml","Body","actionObj","datasourceRequest"],"mappings":"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","file":"datasource.js","sourcesContent":["import TableModel from 'app/core/table_model';\nimport moment from 'moment';\n\nexport class BosunDatasource {\n    constructor(instanceSettings, $q, backendSrv, templateSrv, $sce, $rootScope) {\n        this.annotateUrl = instanceSettings.jsonData.annotateUrl;\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.showHelper = instanceSettings.jsonData.enableQueryHelper;\n        this.preRelease = instanceSettings.jsonData.enablePreReleaseFeatures;\n        this.authToken = instanceSettings.jsonData.authToken;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.sce = $sce;\n        this.$rootScope = $rootScope;\n        this.IncidentListQuery = this.IncidentListQuery.bind(this);\n    }\n\n    makeTable(result) {\n        var table = new TableModel();\n        if (!result || Object.keys(result).length < 1) {\n            return [table];\n        }\n        var tagKeys = [];\n        _.each(result[0].Group, function (v, tagKey) {\n            tagKeys.push(tagKey);\n        });\n        tagKeys.sort();\n        table.columns = _.map(tagKeys, function (tagKey) {\n            return { \"text\": tagKey };\n        });\n        table.columns.push({ \"text\": \"value\" });\n        _.each(result, function (res) {\n            var row = [];\n            _.each(res.Group, function (tagValue, tagKey) {\n                row[tagKeys.indexOf(tagKey)] = tagValue;\n            });\n            row.push(res.Value);\n            table.rows.push(row);\n        });\n        return [table];\n    }\n\n    transformMetricData(result, target, options) {\n        var tagData = [];\n        _.each(result.Group, function (v, k) {\n            tagData.push({ 'value': v, 'key': k });\n        });\n        var sortedTags = _.sortBy(tagData, 'key');\n        var metricLabel = \"\";\n        if (target.alias) {\n            var scopedVars = _.clone(options.scopedVars || {});\n            _.each(sortedTags, function (value) {\n                scopedVars['tag_' + value.key] = { \"value\": value.value };\n            });\n            metricLabel = this.templateSrv.replace(target.alias, scopedVars);\n        } else {\n            tagData = [];\n            _.each(sortedTags, function (tag) {\n                tagData.push(tag.key + '=' + tag.value);\n            });\n            metricLabel = '{' + tagData.join(', ') + '}';\n        }\n        var dps = [];\n        _.each(result.Value, function (v, k) {\n            dps.push([v, parseInt(k) * 1000]);\n        });\n        return { target: metricLabel, datapoints: dps };\n    }\n\n    performTimeSeriesQuery(query, target, options) {\n        var exprDate = options.range.to.utc().format('YYYY-MM-DD');\n        var exprTime = options.range.to.utc().format('HH:mm:ss');\n        var url = this.url + '/api/expr?date=' + encodeURIComponent(exprDate) + '&time=' + encodeURIComponent(exprTime);\n        return this.bosunRequest({\n            url: url,\n            method: 'POST',\n            data: query,\n            datasource: this\n        }).then(response => {\n            if (response.status === 200) {\n                var result;\n                if (response.data.Type === 'series') {\n                    result = _.map(response.data.Results, function (result) {\n                        return response.config.datasource.transformMetricData(result, target, options);\n                    });\n                }\n                if (response.data.Type === 'number') {\n                    result = response.config.datasource.makeTable(response.data.Results);\n                }\n                if (response.data.Type === 'table') {\n                    var table = new TableModel();\n                    table.columns = _.map(response.data.Results[0].Value.Columns, function (column) {\n                        return { \"text\": column };\n                    });\n                    table.rows = response.data.Results[0].Value.Rows;\n                    result = [table];\n                }\n                return { data: result };\n            }\n        });\n    }\n\n    _metricsStartWith(metricRoot) {\n        return this.bosunRequest({\n            url: this.url + \"/api/metric\",\n            method: 'GET',\n            datasource: this\n        }).then((data) => {\n            var filtered = _.filter(data.data, (v) => {\n                return v.startsWith(metricRoot);\n            });\n            return filtered;\n        });\n    }\n\n    _tagKeysForMetric(metric) {\n        return this.bosunRequest({\n            url: this.url + \"/api/tagk/\" + metric,\n            method: 'GET',\n            datasource: this\n        }).then((data) => {\n            return data.data;\n        });\n    }\n\n    _tagValuesForMetricAndTagKey(metric, key) {\n        return this.bosunRequest({\n            url: this.url + \"/api/tagv/\" + key + \"/\" + metric,\n            method: 'GET',\n            datasource: this\n        }).then((data) => {\n            return data.data;\n        });\n    }\n\n    _metricMetadata(metric) {\n        return this.bosunRequest({\n            url: this.url + \"/api/metadata/metrics?metric=\" + metric,\n            method: 'GET',\n            datasource: this\n        }).then((data) => {\n            return data.data;\n        });\n    }\n\n    metricFindQuery(query) {\n        var findTransform = function (result) {\n            return _.map(result, function (value) {\n                return { text: value };\n            });\n        };\n        // Get Metrics that start with the first argument\n        var metricsRegex = /metrics\\((.*)\\)/;\n        // Get tag keys for the given metric (first argument)\n        var tagKeysRegex = /tagkeys\\((.*)\\)/;\n        // Get tag values for the given metric (first argument) and tag key (second argument)\n        var tagValuesRegex = /tagvalues\\((.*),(.*)\\)/;\n\n        var metricsQuery = query.match(metricsRegex)\n        if (metricsQuery) {\n            return this._metricsStartWith(metricsQuery[1]).then(findTransform);\n        }\n\n        var tagKeysQuery = query.match(tagKeysRegex)\n        if (tagKeysQuery) {\n            return this._tagKeysForMetric(tagKeysQuery[1]).then(findTransform);\n        }\n\n        var tagValuesQuery = query.match(tagValuesRegex)\n        if (tagValuesQuery) {\n            return this._tagValuesForMetricAndTagKey(tagValuesQuery[1].trim(), tagValuesQuery[2].trim()).then(findTransform);\n        }\n\n        return this.q.when([]);\n    }\n\n    query(options) {\n        var queries = [];\n        // Get time values to replace $start\n        // The end time is what bosun regards as 'now'\n        var secondsAgo = options.range.to.diff(options.range.from.utc(), 'seconds');\n        secondsAgo += 's';\n        _.each(options.targets, _.bind(function (target) {\n            if (!target.expr || target.hide) {\n                return;\n            }\n            var query = {};\n\n            query = this.templateSrv.replace(target.expr, options.scopedVars, 'pipe');\n            query = query.replace(/\\$start/g, secondsAgo);\n            query = query.replace(/\\$ds/g, options.interval);\n            queries.push(query);\n        }, this));\n\n        // No valid targets, return the empty result to save a round trip.\n        if (_.isEmpty(queries)) {\n            var d = this.q.defer();\n            d.resolve({ data: [] });\n            return d.promise;\n        }\n\n        var allQueryPromise = _.map(queries, _.bind(function (query, index) {\n            return this.performTimeSeriesQuery(query, options.targets[index], options);\n        }, this));\n\n        return this.q.all(allQueryPromise)\n            .then(function (allResponse) {\n                var result = [];\n                _.each(allResponse, function (response) {\n                    _.each(response.data, function (d) {\n                        result.push(d);\n                    });\n                });\n                return { data: result };\n            });\n    }\n\n    _processAnnotationQueryParam(annotation, fieldName, fieldObject, params) {\n        var param = {};\n        var key = fieldName;\n        if (!fieldObject) {\n            return params;\n        }\n        if (fieldObject.empty) {\n            key += \":Empty\"\n        }\n        if (fieldObject.not) {\n            if (!fieldObject.empty) {\n                key += \":\"\n            }\n            key += \":Empty\"\n        }\n        params[key] = this.templateSrv.replace(fieldObject.value, this.templateSrv.variables, 'pipe');\n        return params\n    }\n\n\n    annotationQuery(options) {\n        // http://stackoverflow.com/questions/2998784/how-to-output-integers-with-leading-zeros-in-javascript\n        var pad = (num, size) => {\n            var s = num + \"\";\n            while (s.length < size) s = \"0\" + s;\n            return s;\n        }\n        var annotation = options.annotation;\n        var params = {};\n        params.StartDate = options.range.from.unix();\n        params.EndDate = options.range.to.unix();\n        var annotateUrl = this.annotateUrl;\n        params = this._processAnnotationQueryParam(annotation, \"Source\", annotation.Source, params)\n        params = this._processAnnotationQueryParam(annotation, \"Host\", annotation.Host, params)\n        params = this._processAnnotationQueryParam(annotation, \"CreationUser\", annotation.CreationUser, params)\n        params = this._processAnnotationQueryParam(annotation, \"Owner\", annotation.Owner, params)\n        params = this._processAnnotationQueryParam(annotation, \"Category\", annotation.Category, params)\n        params = this._processAnnotationQueryParam(annotation, \"Url\", annotation.Url, params)\n        var url = this.url + '/api/annotation/query?';\n        if (Object.keys(params).length > 0) {\n            url += jQuery.param(params);\n        }\n        var rawUrl = this.rawUrl;\n        return this.bosunRequest({\n            url: url,\n            method: 'GET',\n            datasource: this\n        }).then(response => {\n            if (response.status === 200) {\n                var events = [];\n                _.each(response.data, (a) => {\n                    var text = [];\n                    var duration = moment.duration(moment(a.EndDate).diff(a.StartDate));\n                    var hours = duration.hours();\n                    var minutes = duration.minutes();\n                    var seconds = duration.seconds();\n                    text.push(\"Duration: \" + pad(hours, 3) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2));\n                    if (a.Source) {\n                        text.push(\"Source: \" + a.Source);\n                    }\n                    if (a.Host) {\n                        text.push(\"Host: \" + a.Host);\n                    }\n                    if (a.CreationUser) {\n                        text.push(\"User: \" + a.CreationUser);\n                    }\n                    if (a.Owner) {\n                        text.push(\"Owner: \" + a.Owner);\n                    }\n                    if (a.Category) {\n                        text.push(\"Category: \" + a.Category);\n                    }\n                    if (a.Url) {\n                        text.push('<a href=\"' + a.Url + '\">' + a.Url.substring(0, 40) + '</a>');\n                    }\n                    if (a.Message) {\n                        text.push(a.Message);\n                    }\n                    text.push('<a target=\"_blank\" href=\"' + annotateUrl + '/annotation?id=' + encodeURIComponent(a.Id) + '\">Edit in Bosun UI</a>')\n                    var grafanaAnnotation = {\n                        annotation: annotation,\n                        time: moment(a.StartDate).utc().unix() * 1000,\n                        title: a.Category,\n                        text: text.join(\"<br>\")\n                    }\n                    events.push(grafanaAnnotation);\n                });\n                return events;\n            }\n        });\n    }\n\n    // Since the API response is not JSON, we need a transform interceptor to \n    // handle a text response. Otherwise we just get i.e. 'Internal Server Error'\n    _plainTextResponseTransform(data, headers) {\n        if (headers(\"content-type\").includes(\"text/plain\")) {\n            return { message: data };\n        }\n        return angular.fromJson(data);\n    }\n\n    IncidentListQuery(query) {\n        var self = this;\n        var url = this.url + '/api/incidents/open';\n        if (query) {\n            var interpolatedQuery = this.templateSrv.replace(query, this.templateSrv.variables, 'pipe');\n            url += '?filter=' + encodeURIComponent(interpolatedQuery)\n        }\n        return this.bosunRequest({\n            url: url,\n            method: 'GET',\n            transformResponse: this._plainTextResponseTransform\n        }).then(response => {\n            if (response.status === 200) {\n                return response.data;\n            }\n        }, (error) => {\n            self.$rootScope.appEvent('alert-error', ['IncidentListQuery Error', error.data.message]);\n        })\n    }\n\n    AlertBodyHTML(alertKey) {\n        return this.bosunRequest({\n            url: this.url + '/api/status?ak=' + encodeURIComponent(alertKey),\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                return this.sce.trustAsHtml(response.data[alertKey].Body);\n            }\n        })\n    }\n\n    submitAction(actionObj) {\n        var self = this;\n        return this.bosunRequest({\n            url: this.url + '/api/action',\n            method: 'POST',\n            data: actionObj,\n            datasource: this\n        }).then((data) => {\n            debugger;\n            self.$rootScope.appEvent('alert-success', ['Incident Action Succeeded', ''])\n        }, (error) => {\n            debugger;\n            self.$rootScope.appEvent('alert-error', ['Incident Action Error', error]);\n        })\n    }\n\n\n    bosunRequest(data) {\n        if (this.authToken) {\n            data.headers = {\n                \"X-Access-Token\": this.authToken\n            };\n        }\n        return this.backendSrv.datasourceRequest(data);\n    }\n\n    // Required\n    // Used for testing datasource in datasource configuration pange\n    testDatasource() {\n        return this.bosunRequest({\n            url: this.url + '/',\n            method: 'GET',\n        }).then(response => {\n            if (response.status === 200) {\n                return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n            }\n        });\n    }\n}\n\n\n"]}