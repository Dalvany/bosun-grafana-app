{"version":3,"sources":["../../src/datasource/query_ctrl.js"],"names":["QueryCtrl","BosunDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","queryHelper","target","expandHelper","suggestMetrics","bind","addSuggest","labelFromUnit","metricInfo","suggestQuery","suggestTagValues","filterTypes","metric","callback","datasource","_metricsStartWith","then","_tagKeysForMetric","tagKeys","q","all","_","map","tagKey","_tagValuesForMetricAndTagKey","tagValues","key","value","tagKeysToValues","each","v","filterType","_metricMetadata","metadata","rate","Rate","unit","Unit","desc","Desc","panelCtrl","panel","type","yaxes","label","postfix","selectedGroupByTags","selectedFilterTags","selectedValue","push","suggestedQuery","join","refresh","expr","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class BosunDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv) {\n    super($scope, $injector);\n    this.scope = $scope;\n    this.queryHelper = {};\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.expandHelper = 0;\n    this.target.target = this.target.target || 'Bosun Query';\n    this.suggestMetrics = this.suggestMetrics.bind(this);\n    this.addSuggest = this.addSuggest.bind(this);\n    this.labelFromUnit = this.labelFromUnit.bind(this);\n    this.metricInfo = this.metricInfo.bind(this);\n    this.suggestQuery = this.suggestQuery.bind(this);\n    this.suggestTagValues = this.suggestTagValues.bind(this);\n    this.filterTypes = [\"Group By\", \"Filter\"]\n  }\n\n  suggestMetrics(metric, callback) {\n    return this.datasource._metricsStartWith(metric).then(callback);\n  }\n\n  metricInfo() {\n    return this.datasource._tagKeysForMetric(this.queryHelper.metric).then((tagKeys) => {\n      this.datasource.q.all(_.map(tagKeys, (tagKey) => {\n        return this.datasource._tagValuesForMetricAndTagKey(this.queryHelper.metric, tagKey).then((tagValues) => {\n          return { key: tagKey, value: tagValues }\n        })\n      })\n      ).then((tagKeysToValues) => {\n        tagKeysToValues = _.each(tagKeysToValues, (v) => { v.filterType = \"Group By\" })\n        this.queryHelper.tagKeysToValues = tagKeysToValues;\n      })\n    }).then(() => this.datasource._metricMetadata(this.queryHelper.metric).then((metadata) => {\n      this.queryHelper.rate = metadata.Rate;\n      this.queryHelper.unit = metadata.Unit;\n      this.queryHelper.desc = metadata.Desc;\n    })).then(() => this.suggestQuery());\n  }\n\n  // Expects that getTags has been called\n  suggestTagValues(key, callback) {\n    return this.queryHelper.tagKeysToValues[key].then(callback)\n  }\n\n  labelFromUnit() {\n    if (this.panelCtrl.panel.type === \"graph\") {\n      this.panelCtrl.panel.yaxes[0].label = this.queryHelper.unit;\n    }\n    if (this.panelCtrl.panel.type === \"singlestat\") {\n      this.panelCtrl.panel.postfix = \" \" + this.queryHelper.unit;\n    }\n  }\n\n  suggestQuery() {\n    var metric = this.queryHelper.metric || \"metric.goes.here\";\n    var selectedGroupByTags = [];\n    var selectedFilterTags = [];\n    _.each(this.queryHelper.tagKeysToValues, (v) => {\n      if (v.selectedValue && v.selectedValue != \"\") {\n        if (v.filterType === this.filterTypes[0]) {\n          selectedGroupByTags.push(v.key + \"=\" + v.selectedValue);\n        }\n        if (v.filterType === this.filterTypes[1]) {\n          selectedFilterTags.push(v.key + \"=\" + v.selectedValue);\n        }\n      }\n    }, this);\n    var rate = \"\";\n    if (this.queryHelper.rate && this.queryHelper.rate == \"counter\") {\n      rate = \"rate{counter,,1}:\"\n    }\n    this.queryHelper.suggestedQuery = \"q(\\\"avg:$ds-avg:\" + rate + metric + \"{\" + selectedGroupByTags.join(\",\") + \"}\" + \"{\" + selectedFilterTags.join(\",\") + \"}\" + \"\\\", \\\"$start\\\", \\\"\\\")\"\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  addSuggest() {\n    if (this.target.expr) {\n      this.target.expr += \"\\n\" + this.queryHelper.suggestedQuery;\n    } else {\n      this.target.expr = this.queryHelper.suggestedQuery;\n    }\n  }\n}\n\nBosunDatasourceQueryCtrl.templateUrl = 'datasource/partials/query.editor.html';\n"]}